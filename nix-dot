#!/bin/sh
#
# A shell script/wrapper utility for backing up and using nixOS on my personal laptop.
#
# Options:
#   'up' -> Copies and uploads my up-to-date dotfiles to Github.
#   'down' -> Downloads and installs my dotfiles as seen on Github.
#   'build' -> A wrapper utility for building both my global and local user
#              configurations using nixos-rebuild and home-manager.
#

# Firstly, parse argument given
BUILD=0
UPLOAD=0
DOWNLOAD=0

for arg in "$1"
do
    case $arg in
        -b|build)
            BUILD=1
            ;;
        -u|up)
            UPLOAD=1
            ;;
        -d|down)
            DOWNLOAD=1
            ;;
    esac
done

if [ $BUILD = 1 ]; then

    echo "Building nixOS configurations... "
    echo ""

    su -c "nixos-rebuild switch"
    home-manager switch

    echo ""
    echo "Finished building nixOS configurations."

elif [ $UPLOAD = 1 ]; then

    echo "Uploading nix/dotfiles to Github..."
    echo ""
    pushd ~/doc/nix-dot/
    cp -r ~/.config/nixpkgs .
    cp -r /etc/nixos/ .
    cp -r ~/.config/herbstluftwm ./config/
    cp -r ~/.config/polybar ./config/
    cp -r ~/.xinitrc ./dot/xinitrc
    cp -r ~/.emacs.d/init.el ./dot/emacs.d/
    cp -r ~/.emacs.d/emacs.org ./dot/emacs.d/
    cp -r ~/.xmodmap ./dot/xmodmap
    
    git add .
    git commit -m "Used nix-dot script to update repo."
    git push
    popd

    
    echo ""
    echo "Finished uploading to Github!"

elif [ $DOWNLOAD = 1 ]; then

    echo "Downloading and copying nix/dotfiles to respective locations..."
    echo "" 

    pushd ~/doc/nix-dot/
    cp -r nixpkgs ~/.config/nixpkgs
    cp -r ./config/herbstluftwm ~/.config/herbstluftwm
    cp -r ./config/polybar ~/.config/polybar 
    cp -r ./dot/xinitrc ~/.xinitrc
    mkdir ~/.emacs.d/
    cp -r ./dot/emacs.d/init.el ~/.emacs.d/ 
    cp -r ./dot/emacs.d/emacs.org ~/.emacs.d/
    cp -r ./dot/xmodmap ~/.xmodmap
    su -c "cp -r ./nixos /etc/"
    popd

    echo ""
    echo "All finished!"
    echo ""
    echo "Remember to run:"
    echo "# nixos-rebuild switch"
    echo "$ home-manager switch"

else
    echo "Must give an argument such as: "
    echo "  up (-u): Upload dotfiles to Github."
    echo "  down (-d): Download dotfiles and distribute from Github."
    echo "  build (-b): Build nixOS configurations using this wrapper."
fi 
